name: 'verify-git-ref'

description: 'An action that verifies a provided branch, tag or SHA exists in the repository'

inputs:
  branch-tag-sha:
    description: 'The branch, tag or sha that should be checked'
    required: true
  throw-errors:
    description: 'Flag indicating whether the action should throw an error if the ref does not exist.  Defaults to true.  Accepted values: true|false'
    required: true
    default: 'true'

outputs:
  REF_WITHOUT_PREFIX:
    description: 'References without a prefix if present'
    value: ${{ steps.remove-ref-prefix.outputs.result }}
  REF_EXISTS:
    description: 'Flag indicating whether the provided reference exists.  true|false'
    value: ${{ steps.determine-ref.outputs.REF_EXISTS }}
  REF_TYPE:
    description: 'String indicating the type of the provided reference: tag|branch|sha|unknown'
    value: ${{ steps.determine-ref.outputs.REF_TYPE }}

runs:
  using: 'composite'
  steps:
    
    # Removes any leading paths if present i.e. refs/tags/v2.1.0 -> v2.1.0
    - id: remove-ref-prefix
      env: 
        GITHUB_REF: ${{ inputs.branch-tag-sha }}
      run: echo "##[set-output name=result;]${GITHUB_REF##*/}"
      
    - id: determine-ref
      shell: bash
      run: |
        echo "checking ref ${{ inputs.branch-tag-sha }}..."
        ref="${{ inputs.branch-tag-sha }}"
        refWithPrefix="refs/heads${{ steps.remove-ref-prefix.outputs.result }}"
        
        echo "::set-output name=REF_EXISTS::false"
        echo "::set-output name=REF_TYPE::unknown"

        if [ $(git tag -l "$ref") ]; then
          echo "The ref '${ref}' exists as a tag"
          echo "::set-output name=REF_EXISTS::true"
          echo "::set-output name=REF_TYPE::tag"

        elif [ "$(git show-ref -s "$ref")" ]; then
          echo "The ref '${ref}' exists as a branch (no prefix was added to the input)"
          echo "::set-output name=REF_EXISTS::true"
          echo "::set-output name=REF_TYPE::branch"

        elif [ "$(git show-ref -s "$refWithPrefix")" ]; then
          echo "The ref '${refWithPrefix}' exists as a branch (the refs/heads/ prefix was added to the input)"
          echo "::set-output name=REF_EXISTS::true"
          echo "::set-output name=REF_TYPE::branch"

        elif git cat-file -e $ref^{commit}; then
          echo "The ref '${ref}' exists as a SHA"
          echo "::set-output name=REF_EXISTS::true"
          echo "::set-output name=REF_TYPE::sha"
          
        else
          echo "The ref does not appear to exist"
          if [ '${{ inputs.throw-errors }}' == 'true' ]; then
            exit 1;
          fi
        fi
